const fs = require("fs-extra");
const moment = require("moment-timezone");

let cachedData = null;

// ржПржХржмрж╛рж░ load ржХрж░рж╛ ржПржмржВ ржкрзНрж░рждрж┐ 1 ржорж┐ржирж┐ржЯрзЗ refresh ржХрж░рж╛
async function loadReplies() {
  try {
    cachedData = await fs.readJson("./replies.json");
    console.log("[BOT] Replies loaded successfully!");
  } catch (err) {
    console.error("[BOT] Failed to load replies:", err);
  }
  setTimeout(loadReplies, 60 * 1000); // ржкрзНрж░рждрж┐ 1 ржорж┐ржирж┐ржЯрзЗ refresh
}

// рж╢рзБрж░рзБрждрзЗ load ржХрж░рж╛
loadReplies();

module.exports.handleEvent = async function({ api, event, Users }) {
  const { threadID, senderID, body } = event;
  if (!body || !cachedData) return;

  const name = await Users.getNameUser(senderID);
  const lowerBody = body.toLowerCase();

  // Random reply
  const randomReplies = cachedData.randomReplies || [];
  const keywordResponses = cachedData.keywordResponses || {};
  const rand = randomReplies[Math.floor(Math.random() * randomReplies.length)];

  // Logging (optional)
  console.log(`[BOT] ${senderID} -> ${body}`);

  // Keyword check (exact match)
  for (let key in keywordResponses) {
    if (lowerBody === key) {
      return api.sendMessage(keywordResponses[key], threadID);
    }
  }

  // /bot ржХржорж╛ржирзНржб handle
  if (lowerBody.startsWith("/bot")) {
    return api.sendMessage(`${name}, ${rand}`, threadID);
  }
};

{
  "randomReplies": [
    "ржмрзЗрж╢рж┐ bot Bot ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБЁЯШТЁЯШТ",
    "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж╛ржЗЁЯе║ржкржЪрж╛ рждрзБржорж┐ЁЯе║",
    "ржЖржорж┐ ржЖржмрж╛рж▓ ржжрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛,okЁЯШТ",
    "ржПрждрзЛ ржбрзЗржХрзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛЁЯЩИ",
    "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИЁЯТЛ"
  ],
  "keywordResponses": {
    "miss you": "ржЖржорж┐ рждрзЛржорж╛ржХрзЗ рж░рж╛ржЗрждрзЗ ржорж┐рж╕ ржЦрж╛ржЗЁЯе╣ЁЯдЦЁЯСЕ/ЁЯСЕ-тЬШ  ЁЯОА ЁЯНТ:))",
    "ЁЯШШ": "ржХрж┐рж╕ ржжрж┐рж╕ ржирж╛ рждрзЛрж░ ржорзБржЦрзЗ ржжрзВрж░ ржЧржирзНржз ржХржпрж╝ржжрж┐ржи ржзрж░рзЗ ржжрж╛ржБржд ржмрзНрж░рж╛рж╢ ржХрж░рж┐рж╕ ржирж╛ржЗЁЯдм",
    "help": "type /help"
  }
}
